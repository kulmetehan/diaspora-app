name: Refresh News Content

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours at minute 0 (00:00, 06:00, 12:00, 18:00 UTC)
  workflow_dispatch:  # Allow manual triggers

jobs:
  fetch-news:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Add timeout to prevent hanging

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt

    - name: Run Optimized Google News Fetcher
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        cd backend
        echo "ðŸ”„ Starting news fetch at $(date)"
        python google_news_fetcher.py
        echo "âœ… News fetch completed at $(date)"

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          try {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'News Fetching Failed',
              body: 'The scheduled news fetching job has failed. Please check the logs.'
            })
          } catch (error) {
            console.log('Could not create issue, but workflow failed:', error.message)
          }

    - name: Cleanup old articles
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      run: |
        cd backend
        python cleanup_old_articles.py
